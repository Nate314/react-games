{"version":3,"sources":["assets/pipe.png","assets/sky58.png","assets/bird.png","assets/ground.png","Utility.tsx","Snake.tsx","FloatyStars.tsx","Music.tsx","FlappyFinch.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Utility","Object","classCallCheck","this","createClass","key","value","length","item","Array","fill","squareSize","arePositionsEqual","p1","p2","Board","props","_this","possibleConstructorReturn","getPrototypeOf","call","snakeHeadColor","snakeBodyColor","foodColor","boardColor","_this2","squareColors","array","map","v","rowindex","columnindex","color","snakeBody","forEach","bodyPart","food","snakeHead","onEat","maxWidth","Math","floor","window","innerWidth","maxHeight","innerHeight","min","react_default","a","createElement","row","className","concat","style","backgroundColor","width","height","React","Component","ScoreBoard","_this3","score","paused","gameover","highscore","GameState","snakeDirection","snakeHeadPosition","boardHeight","foodPosition","boardWidth","snakeLength","gameTickInterval","SnakeGame","_this4","gameTickDelta","snakeLengthDelta","scoreDelta","currentDirection","interval","state","keyDown","e","setState","k","includes","clearInterval","setInterval","gameTick","tempState","_this5","dir","_state$snakeHeadPosit","slicedToArray","y","x","push","slice","i","hs","localStorage","getItem","newHighScore","Number","setItem","JSON","stringify","document","addEventListener","_this6","random","isFoodInBody","_this7","isNaN","Snake_Board","eatFood","Snake_ScoreBoard","numberOfStars","maxSpeed","frameInterval","FloatyStarsState","starLocations","starVelocities","FloatyStars","animate","starLocation","filter","star","top","left","MusicState","audio","Audio","play","Music","url","flapVelocity","colliding","object","bird","horizontalCollision","leftObject","rightObject","leftBird","verticalCollision","isPipe","topPipeBottom","pipeYGap","bottomPipeTop","topBird","bottomBird","topObject","bottomObject","NomNomProps","NomNom","position","nomNomSize","PipeProps","index","birdPosition","BirdProps","onNomNom","Pipe","nomNomEaten","nomNomProps","topPipeTop","pipeWidth","FlappyFinch_NomNom","src","pipeImage","transform","Bird","birdImage","FlappyFinchGameState","pipePositions","birdVelocity","collision","currentPipeToCheck","shouldDing","shouldFlap","groundX","skyX","FlappyFinchGame","randomPipePosition","restart","lshs","pipe","incrementScore","max","apply","toConsumableArray","pos","_ref","_ref2","ding","flap","_ref3","pipes","FlappyFinch_Pipe","gamestatus","ground","groundImage","textAlign","fontSize","background","sky58Image","scoreboard","src_Music","FlappyFinch_Bird","Boolean","location","hostname","match","App","react_router_dom","basename","react_router","path","exact","component","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8QCC3BC,SAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,OAAAK,IAAA,QAAAC,MAAA,SACiBC,EAAgBC,GACzB,OAAOC,MAAMF,GAAQG,KAAKF,GAAc,UAFhDR,EAAA,ICKIW,EAAa,EAEXC,EAAoB,SAACC,EAAcC,GAAf,OAAgCD,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,IASpFC,cAQF,SAAAA,EAAYC,GAAmB,IAAAC,EAAA,OAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IAC3BE,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAc,GAAAK,KAAAjB,KAAMa,KAPVK,eAAiB,OAMcJ,EAL/BK,eAAiB,QAKcL,EAJ/BM,UAAY,MAImBN,EAH/BO,WAAa,QAGkBP,EAF/BD,WAE+B,EAE3BC,EAAKD,MAAQA,EAFcC,wEAKtB,IAAAQ,EAAAtB,KAECuB,EAA2B1B,EAAQ2B,MA3B7B,IA2BgDC,IAAI,SAACC,EAAGC,GAAJ,OAC5D9B,EAAQ2B,MA7BD,IA6BmBC,IAAI,SAACC,EAAGE,GAC9B,IAAIC,EAWJ,OAVAP,EAAKT,MAAMiB,UAAUC,QAAQ,SAAAC,GACrBvB,EAAkBuB,EAAU,CAACL,EAAUC,MACvCC,EAAQP,EAAKH,kBAEjBV,EAAkBa,EAAKT,MAAMoB,KAAM,CAACN,EAAUC,IAC9CC,EAAQP,EAAKF,UACRX,EAAkBa,EAAKT,MAAMqB,UAAW,CAACP,EAAUC,IACxDC,EAAQP,EAAKJ,eACPW,IACNA,EAAQP,EAAKD,YACVQ,MAIXpB,EAAkBT,KAAKa,MAAMqB,UAAWlC,KAAKa,MAAMoB,OAAOjC,KAAKa,MAAMsB,QAEzE,IAAMC,EAAWC,KAAKC,OAAOC,OAAOC,WAAa,KA/CtC,IAgDLC,EAAYJ,KAAKC,OAAOC,OAAOG,YAAc,KA/CvC,IAkDZ,OAFAlC,EAAa6B,KAAKM,IAAIP,EAAUK,GAG5BG,EAAAC,EAAAC,cAAA,WAEQjD,EAAQ2B,MArDR,IAqD2BC,IAAI,SAACsB,EAAKpB,GAAN,OAC3BiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY9C,IAAG,OAAA+C,OAAStB,IAE/B9B,EAAQ2B,MAzDrB,IAyDuCC,IAAI,SAACsB,EAAKnB,GAAN,OAC1BgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAS9C,IAAG,UAAA+C,OAAYtB,EAAZ,KAAAsB,OAAwBrB,GAC/CsB,MACI,CAACC,gBAAiB5B,EAAaI,GAAUC,GACzCwB,MAAK,GAAAH,OAAKzC,EAAL,MAAqB6C,OAAM,GAAAJ,OAAKzC,EAAL,sBAhDxD8C,IAAMC,WAoEpBC,cAIF,SAAAA,EAAY3C,GAAwB,IAAA4C,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IAChCC,EAAA3D,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAA0D,GAAAvC,KAAAjB,KAAMa,KAHVA,WAEoC,EAEhC4C,EAAK5C,MAAQA,EAFmB4C,wEAMhC,OACIb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASE,MAAO,CAACE,MAAK,GAAAH,OAAe,GAAVzC,EAAL,QAArC,UACYR,KAAKa,MAAM6C,OAEvBd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASE,MAAO,CAACE,MAAK,GAAAH,OAAe,GAAVzC,EAAL,QAE7BR,KAAKa,MAAM8C,OACXf,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAACrB,MAAM,UAAUe,EAAAC,EAAAC,cAAA,oBAC3B9C,KAAKa,MAAM+C,SACbhB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAACrB,MAAM,QAAQe,EAAAC,EAAAC,cAAA,uBADzB,eAAAG,OAEejD,KAAKa,MAAMgD,aAIxCjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASE,MAAO,CAACE,MAAK,GAAAH,OA5GtC,GA4GyDzC,EAAnB,QAArC,qEA3BK8C,IAAMC,WAoCzBO,wCACFH,QAAkB,OAClBC,UAAoB,OACpBF,MAAgB,OAChBK,eAAyB,SACzBC,kBAA8B,CAACC,GAAiB,QAChDnC,UAAwB,QACxBoC,aAAyB,CAACD,GAAiBE,SAC3CC,YAAsB,OACtBC,iBAA2B,KAGVC,cASjB,SAAAA,EAAYzD,GAAY,IAAA0D,EAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACpBC,EAAAzE,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAwE,GAAArD,KAAAjB,KAAMa,KARV2D,cAAwB,EAOAD,EANxBE,iBAA2B,EAMHF,EALxBG,WAAqB,EAKGH,EAJxBI,sBAIwB,EAAAJ,EAHxBK,cAGwB,EAAAL,EAFxBM,WAEwB,EAAAN,EA2CxBO,QAAU,SAACC,GACPR,EAAKS,SAAS,SAACH,GACX,IAAMI,EAAIF,EAAE7E,IAgBZ,OAdA2E,EAAMd,eACD,CAAC,IAAK,KAAKmB,SAASX,EAAKI,kBAGzB,CAAC,IAAK,KAAKO,SAASX,EAAKI,kBAGxBJ,EAAKI,iBAFK,cAANM,GAA2B,MAANA,GAAmB,MAANA,EAAa,IAC1C,eAANA,GAA4B,MAANA,GAAmB,MAANA,EAAa,IAAMV,EAAKI,iBAJpD,YAANM,GAAyB,MAANA,GAAmB,MAANA,EAAa,IACxC,cAANA,GAA2B,MAANA,GAAmB,MAANA,EAAa,IAAMV,EAAKI,iBAKzD,WAANM,IAAgBJ,EAAMlB,QAAUkB,EAAMlB,QACtC,CAAC,IAAK,KAAKuB,SAASD,KACpBE,cAAcZ,EAAKK,UACnBC,EAAQ,IAAIf,EACZS,EAAKK,SAAWQ,YAAY,kBAAMb,EAAKc,YAAYR,EAAMR,mBAEtDQ,KA3DX,IAAMS,EAAY,IAAIxB,EAFF,OAGpBS,EAAKM,MAAQS,EACbf,EAAKI,iBAAmBJ,EAAKM,MAAMd,eACnCQ,EAAKS,SAASM,GACdf,EAAKK,SAAWQ,YAAY,kBAAMb,EAAKc,YAAYd,EAAKM,MAAMR,kBAN1CE,0EASb,IAAAgB,EAAAvF,KACPA,KAAKgF,SAAS,SAACH,GACX,IAAKA,EAAMlB,SAAWkB,EAAMjB,SAAU,CAElC,IAAM4B,EAAMX,EAAMd,eAClBwB,EAAKZ,iBAAmBa,EAHU,IAAAC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAIrB+E,EAAMb,kBAJe,GAI7B2B,EAJ6BF,EAAA,GAI1BG,EAJ0BH,EAAA,GAmBlC,GAdAZ,EAAM/C,UAAU+D,KAAK,CAACF,EAAGC,IACzBA,EAAY,MAARJ,EAAcI,EAAI,EAAY,MAARJ,EAAcI,EAAI,EAAIA,GAChDD,EAAY,MAARH,EAAcG,EAAI,EAAY,MAARH,EAAcG,EAAI,EAAIA,GAExC,GAAKA,EAAI1B,IAAmB2B,EAAI,GAAKA,EAAIzB,GAC7CU,EAAMjB,UAAW,GAEjBiB,EAAMb,kBAAoB,CAAC2B,EAAGC,GAC9Bf,EAAM/C,UAAYjC,EAAQ2B,MAAMqD,EAAM/C,UAAU1B,OAAQ,EAAE,GAAI,IAAI6C,OAAO4B,EAAM/C,WAC/E+C,EAAM/C,UAAY+C,EAAM/C,UAAUgE,MAAMjB,EAAM/C,UAAU1B,OAASyE,EAAMT,aACvES,EAAM/C,UAAUC,QAAQ,SAACC,EAAU+D,GAC3BtF,EAAkBuB,EAAU6C,EAAMb,qBAAoBa,EAAMjB,UAAW,MAG/EiB,EAAMjB,SAAU,CAChB,IAAMoC,EAAKC,aAAaC,QAAQ,2BAC5BC,GAAe,EACfH,GAAMI,OAAOJ,GAAMnB,EAAMnB,QAAOyC,GAAe,GAC/CA,GACAF,aAAaI,QAAQ,0BAA2BC,KAAKC,UAAU1B,EAAMnB,SAIjF,OAAOmB,gDA2BX2B,SAASC,iBAAiB,UAAWzG,KAAK8E,2CAGpC,IAAA4B,EAAA1G,KACNA,KAAKgF,SAAS,SAACH,GAEX,OAAa,CACTA,EAAMX,aAhNO,CAAC7B,KAAKC,MAFf,GAEqBD,KAAKsE,UAAyBtE,KAAKC,MAHzD,GAG+DD,KAAKsE,WAiNvE,IAAIC,GAAe,EAInB,GAHA/B,EAAM/C,UAAUC,QAAQ,SAAAC,GAChBvB,EAAkBoE,EAAMX,aAAclC,KAAW4E,GAAe,MAEnEA,EAAc,MAOvB,OALA/B,EAAMT,aAAesC,EAAKjC,iBAC1BI,EAAMnB,OAASgD,EAAKhC,WACpBG,EAAMR,kBAAoBqC,EAAKlC,cAC/BW,cAAcuB,EAAK9B,UACnB8B,EAAK9B,SAAWQ,YAAY,kBAAMsB,EAAKrB,YAAYR,EAAMR,kBAClDQ,qCAIN,IAAAgC,EAAA7G,KACD6D,EAAYuC,OAAOH,aAAaC,QAAQ,4BAG5C,OAFArC,EAAYiD,MAAMjD,GAAa,EAAIA,EAG/BjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiE,EAAD,CACIjF,UAAW9B,KAAK6E,MAAM/C,UACtBI,UAAWlC,KAAK6E,MAAMb,kBACtB/B,KAAMjC,KAAK6E,MAAMX,aACjB/B,MAAO,kBAAM0E,EAAKG,aAEtBpE,EAAAC,EAAAC,cAACmE,EAAD,CACIvD,MAAO1D,KAAK6E,MAAMnB,MAClBG,UAAWA,EACXF,OAAQ3D,KAAK6E,MAAMlB,OACnBC,SAAU5D,KAAK6E,MAAMjB,mBAlHFN,IAAMC,WCjIvC2D,SAAgB,KAEhBC,EAAW,EACXC,EAAgB,GAEhBC,wCACFC,cAA4B,QAC5BC,eAA6B,IAGZC,cAKjB,SAAAA,EAAY3G,GAAY,IAAAC,EAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACpB1G,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAA0H,GAAAvG,KAAAjB,KAAMa,KAJVgE,WAGwB,EAAA/D,EAFxBD,WAEwB,EAEpBC,EAAKD,MAAQA,EACbC,EAAK+D,MAAQ,IAAIwC,EACjB,IAAMjE,EAAQb,OAAOC,WACfa,EAASd,OAAOG,YALF,OAMpB7C,EAAQ2B,MAAM0F,GAAenF,QAAQ,WACjCjB,EAAK+D,MAAMyC,cAAczB,KAAK,CAACxD,KAAKsE,SAAWvD,EAAOf,KAAKsE,SAAWtD,IACtEvC,EAAK+D,MAAM0C,eAAe1B,KAAK,CAACxD,KAAKsE,SAAWQ,EAAU9E,KAAKsE,SAAWQ,MAE9ErG,EAAKkE,SAASlE,EAAK+D,OACnBO,YAAY,WACRtE,EAAK2G,WACNL,GAbiBtG,yEAiBpB,IAAMsC,EAAQb,OAAOC,WACfa,EAASd,OAAOG,YACtB1C,KAAKgF,SAAS,SAACH,GACX,IAAIkB,EAAI,EAYR,OAXAlB,EAAMyC,cAAcvF,QAAQ,SAAA2F,GACxBA,EAAa,IAAM7C,EAAM0C,eAAexB,GAAG,GAC3C2B,EAAa,IAAM7C,EAAM0C,eAAexB,GAAG,GACpC2B,EAAa,GAAKtE,EAtCxB,IAsC4CsE,EAAa,IAAK,KAC3DA,EAAa,GAAKtE,EAvCrB,IAyCMsE,EAAa,GAAKrE,EAzCxB,IAyC6CqE,EAAa,IAAK,KAC5DA,EAAa,IA1ChB,IA4CD3B,MAEGlB,qCAKX,IAAMzB,EAAQb,OAAOC,WACfa,EAASd,OAAOG,YACtB,OACIE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEPhD,KAAK6E,MAAMyC,cACVK,OAAO,SAAAC,GAAI,OAAKA,EAAK,GAAKxE,GAASwE,EAAK,GAAK,GAAOA,EAAK,GAAKvE,GAAUuE,EAAK,GAAK,IAClFnG,IAAI,SAAAiG,GAAY,OACT9E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXE,MAAO,CACH2E,IAAG,GAAA5E,OAAKyE,EAAa,GAAlB,MAA0BI,KAAI,GAAA7E,OAAKyE,EAAa,GAAlB,MACjCtE,MAAK,GAAAH,OA9DxB,GA8DwB,MAAmBI,OAAM,GAAAJ,OA9DjD,GA8DiD,mBArDzBK,IAAMC,mBCPzCwE,+CACFC,MAA0B,IAAIC,MAAM,SACpCC,MAAgB,IAiCHC,cA1Bb,SAAAA,EAAYtH,GAAmB,IAAAC,EAAA,OAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IAC3BrH,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAqI,GAAAlH,KAAAjB,KAAMa,KAJVgE,WAG+B,EAAA/D,EAF/BD,WAE+B,EAE3BC,EAAKD,MAAQA,EACbC,EAAK+D,MAAQ,IAAIkD,EACjBjH,EAAK+D,MAAMmD,MAAQ,IAAIC,MAAMnH,EAAKD,MAAMuH,KACxCtH,EAAKkE,SAASlE,EAAK+D,OALQ/D,wEAkB3B,OAHId,KAAKa,MAAMqH,MACXlI,KAAK6E,MAAMmD,MAAME,OAGjBtF,EAAAC,EAAAC,cAAA,mBAvBQQ,IAAMC,+ECHpB6D,EAAgB,GAKhBiB,GAAgB,KAMhBC,EAAY,SAACC,EAAgFC,GAE/F,IAAIC,GAAsB,EACpBC,EAAaH,EAAO3C,EACpB+C,EAAcJ,EAAO3C,EAZb,IAaRgD,EAAWJ,EAAK5C,EACJ4C,EAAK5C,EAXV,GAYG8C,GAAcE,EAAWD,IAAaF,GAAsB,GAE5E,IAAII,GAAoB,EACxB,GAAIN,EAAOO,OAAQ,CACf,IACMC,EAAgBR,EAAO5C,EADbqD,IAEVC,EAAgBV,EAAO5C,EAFbqD,IAGVE,EAAUV,EAAK7C,EACfwD,EAAaX,EAAK7C,EApBf,IAqBLuD,EAAUH,GAAiBI,EAAaF,KAAeJ,GAAoB,OAC5E,CACH,IAAMO,EAAYb,EAAO5C,EACnB0D,EAAed,EAAO5C,EAAI4C,EAAOlF,OACjC6F,EAAUV,EAAK7C,EACF6C,EAAK7C,EA1Bf,GA2BQyD,GAAaF,EAAUG,IAAcR,GAAoB,GAG9E,OAAOJ,GAAuBI,GAG5BS,wCACF1D,EAAY,OACZD,EAAY,GAGV4D,cAIF,SAAAA,EAAY1I,GAAoB,IAAAC,EAAA,OAAAhB,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,IAC5BzI,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAyJ,GAAAtI,KAAAjB,KAAMa,KAHVA,WAEgC,EAE5BC,EAAKD,MAAQA,EAFeC,wEAO5B,OACI8B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASE,MAAO,CAACsG,SAAS,WACrCpG,MAAK,GAAAH,OAnDN,GAmDM,MAAoBI,OAAM,GAAAJ,OAnDhC,GAmDgC,MAC/B4E,IAAG,GAAA5E,OAAIjD,KAAKa,MAAM8E,EALP8D,EAKR,MACH3B,KAAI,GAAA7E,OAAIjD,KAAKa,MAAM+E,EAAf,iBAhBHtC,IAAMC,WAuBrBmG,EAMF,SAAAA,EAAY9D,EAAWD,EAAWgE,GAAgB7J,OAAAC,EAAA,EAAAD,CAAAE,KAAA0J,GAAA1J,KALlD4F,EAAY,EAKqC5F,KAJjD2F,EAAY,EAIqC3F,KAHjD2J,MAAgB,EAGiC3J,KAFjD4J,aAA0B,IAAIC,EAAU,EAAG,GAEM7J,KADjD8J,cACiD,EAC7C9J,KAAK4F,EAAIA,EACT5F,KAAK2F,EAAIA,EACT3F,KAAK2J,MAAQA,GAIfI,cAMF,SAAAA,EAAYlJ,GAAkB,IAAAS,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IAC1BzI,EAAAxB,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAiK,GAAA9I,KAAAjB,KAAMa,KALVmJ,aAAuB,EAIO1I,EAH9B2I,iBAG8B,EAAA3I,EAF9BT,WAE8B,EAE1BS,EAAKT,MAAQA,EACbS,EAAK2I,YAAc,IAAIX,EAHGhI,wEAO1B,IAAM+B,EAASd,OAAOG,YAEhBwH,EAAclK,KAAKa,MAAM8E,EAAItC,EADnB2F,IAEVC,EAAgBjJ,KAAKa,MAAM8E,EAFjBqD,IAIhB,GADAhJ,KAAKiK,YAAYrE,EAAI5F,KAAKa,MAAM+E,EAAKuE,GACX,GAAtBnK,KAAKiK,YAAYtE,EAAQ,CACzB,IAAMoD,EAAgBmB,EAAa7G,EACnCrD,KAAKiK,YAAYtE,EAAIoD,EAAiB1G,KAAKsE,UAAYsC,EAAgBF,GAE3E,IAAMR,EAAS,CACX3C,EAAG5F,KAAKiK,YAAYrE,EACpBD,EAAG3F,KAAKiK,YAAYtE,EACpBvC,MAlGO,GAmGPC,OAnGO,GAoGPyF,QAAQ,GAMZ,OAJK9I,KAAKgK,aAAe1B,EAAUC,EAAQvI,KAAKa,MAAM+I,gBAClD5J,KAAKa,MAAMiJ,WACX9J,KAAKgK,aAAc,GAGnBpH,EAAAC,EAAAC,cAAA,WACK9C,KAAKgK,YAAc,GAAKpH,EAAAC,EAAAC,cAACsH,EAAD,CAAQxE,EAAG5F,KAAKiK,YAAYrE,EAAGD,EAAG3F,KAAKiK,YAAYtE,IAC5E/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOqH,IAAKC,IAAWpH,MAAO,CAAEqH,UAAU,gBACrD1C,IAAG,GAAA5E,OAAIiH,EAAJ,MAAoBpC,KAAI,GAAA7E,OAAIjD,KAAKa,MAAM+E,EAAf,MAAsBxC,MAAK,GAAAH,OAlHxD,IAkHwD,SAC1DL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOqH,IAAKC,IAAWpH,MAAO,CAAEqH,UAAU,eACrD1C,IAAG,GAAA5E,OAAIgG,EAAJ,MAAuBnB,KAAI,GAAA7E,OAAIjD,KAAKa,MAAM+E,EAAf,MAAsBxC,MAAK,GAAAH,OApH3D,IAoH2D,iBAvC1DK,IAAMC,WA6CnBsG,EAGF,SAAAA,EAAYjE,EAAWD,GAAY7F,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,GAAA7J,KAFnC4F,EAAY,EAEsB5F,KADlC2F,EAAY,EAER3F,KAAK4F,EAAIA,EACT5F,KAAK2F,EAAIA,GAIX6E,cAIF,SAAAA,EAAY3J,GAAkB,IAAA4C,EAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IAC1B/G,EAAA3D,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAA0K,GAAAvJ,KAAAjB,KAAMa,KAHVA,WAE8B,EAE1B4C,EAAK5C,MAAQA,EAFa4C,wEAM1B,OACIb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOqH,IAAKI,IACvBvH,MAAO,CAAC4E,KAAI,GAAA7E,OAAIjD,KAAKa,MAAM+E,EAAf,MAAsBiC,IAAG,GAAA5E,OAAIjD,KAAKa,MAAM8E,EAAf,MAC7BvC,MAAK,GAAAH,OA7IZ,GA6IY,MAAkBI,OAAM,GAAAJ,OA7IpC,GA6IoC,gBAblCK,IAAMC,WAkBnBmH,wCACFC,cAA6B,QAC7Bf,aAA0B,IAAIC,EAAU,IAAK,QAC7Ce,aAAuB,OACvBjH,QAAkB,OAClBC,UAAoB,OACpBiH,WAAqB,OACrBC,mBAA6B,OAC7BpH,MAAgB,OAChBG,UAAoB,OACpBkH,YAAsB,OACtBC,YAAsB,OACtBC,QAAkB,OAClBC,KAAe,GAGEC,cAMjB,SAAAA,EAAYtK,GAAY,IAAA0D,EAAA,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmL,IACpB5G,EAAAzE,OAAAiB,EAAA,EAAAjB,CAAAE,KAAAF,OAAAkB,EAAA,EAAAlB,CAAAqL,GAAAlK,KAAAjB,KAAMa,KANVuK,mBAAqB,kBAAO7I,OAAOG,YAAc,GAAOL,KAAKsE,SAAW,KAAQpE,OAAOG,YAAc,IAK7E6B,EAHxBM,WAGwB,EAAAN,EAFxB1D,WAEwB,EAAA0D,EA6BxBO,QAAU,SAACC,GACPR,EAAKS,SAAS,SAACH,GAEX,OADUE,EAAE7E,KAER,IAAK,IACD2E,EAAM+F,aAAevC,EACrBxD,EAAMmG,YAAa,EACnB,MACJ,IAAK,SACDnG,EAAMlB,QAAUkB,EAAMlB,OACtB,MACJ,IAAK,IACL,IAAK,IACDY,EAAK8G,UAGb,OAAOxG,KA3CXN,EAAK1D,MAAQA,EACb0D,EAAKM,MAAQ,IAAI6F,EACjBnG,EAAK8G,UACLjG,YAAY,WACHb,EAAKM,MAAMlB,QAAWY,EAAKM,MAAMjB,UAClCW,EAAKkD,WAEVL,GATiB7C,yEAYd,IAAAgB,EAAAvF,KACNA,KAAK6E,MAAQ,IAAI6F,EACjB,IAAMY,EAAOrF,aAAaC,QAAQ,iCAC7BoF,GACDrF,aAAaI,QAAQ,gCAAiCC,KAAKC,UAAU,IAEzEvG,KAAK6E,MAAMhB,UAAYyH,EAAOlF,OAAOkF,GAAQ,EAC7C,IAAI1F,EAAI,IACJ+D,EAAQ,EACZ9J,EAAQ2B,MAAM,IAAIO,QAAQ,WACtBwD,EAAKV,MAAM8F,cAAc9E,KAAK,IAAI6D,EAAU9D,EAAGL,EAAK6F,qBAAsBzB,IAC1E/D,GApMK,IAqML+D,MAEJ3J,KAAKgF,SAAShF,KAAK6E,mDAwBnB2B,SAASC,iBAAiB,UAAWzG,KAAK8E,kDAI1C9E,KAAK6E,MAAMnB,QACX,IAAM4H,EAAOrF,aAAaC,QAAQ,iCAC9BE,OAAOkF,GAAQtL,KAAK6E,MAAMnB,QAC1B1D,KAAK6E,MAAMhB,UAAY7D,KAAK6E,MAAMnB,MAClCuC,aAAaI,QAAQ,gCAAiCC,KAAKC,UAAUvG,KAAK6E,MAAMhB,+CAI9E,IAAA6C,EAAA1G,KACAoD,EAAQb,OAAOC,WACfa,EAASd,OAAOG,YACtB1C,KAAKgF,SAAS,SAACH,GACXA,EAAM+E,aAAajE,GAAKd,EAAM+F,aAC9B/F,EAAM+F,cA7OM,IA8OZ/F,EAAM8F,cAAc5I,QAAQ,SAAAwJ,GACxB,GAAI1G,EAAMiG,qBAAuBS,EAAK5B,MAAO,CACrC4B,EAAK3F,EAjPX,IAiP2Bc,EAAK7B,MAAM+E,aAAahE,IAC7Cf,EAAMiG,qBACNpE,EAAK8E,kBAET,IAAMjD,EAAS,CACX3C,EAAG2F,EAAK3F,EAAGD,EAAG4F,EAAK5F,EACnBvC,MAvPN,IAuPwBC,OAAQA,EAC1ByF,QAAQ,GAEZjE,EAAMjB,SAAW0E,EAAUC,EAAQ7B,EAAK7B,MAAM+E,cAE9C2B,EAAK5B,MAAQ9E,EAAMiG,mBAAqB,IACxCS,EAAK5B,MAAQtH,KAAKoJ,IAALC,MAAArJ,KAAIvC,OAAA6L,EAAA,EAAA7L,CAAQ+E,EAAM8F,cAAclJ,IAAI,SAAAmK,GAAG,OAAIA,EAAIjC,UAAU,EACtE4B,EAAK3F,EAAIvD,KAAKoJ,IAALC,MAAArJ,KAAIvC,OAAA6L,EAAA,EAAA7L,CAAQ+E,EAAM8F,cAAclJ,IAAI,SAAAmK,GAAG,OAAIA,EAAIhG,MAhQ3D,IAiQG2F,EAAK5F,EAAIe,EAAK0E,sBAElBG,EAAK3F,GAAK,IArB6B,IAAAiG,EAuBb,CAAChH,EAAMoG,QAAS,EAAGpG,EAAMqG,KAAO,IAA7DrG,EAAMoG,QAvBoCY,EAAA,GAuB3BhH,EAAMqG,KAvBqBW,EAAA,GAwBvChH,EAAMoG,QAAmB,MAAR7H,IACjByB,EAAMoG,QAAU,GAEhBpG,EAAMqG,KAAgB,IAAR9H,IACdyB,EAAMqG,KAAO,GAEbrG,EAAM+E,aAAajE,EAAItC,EAAM,GAC7BwB,EAAMjB,UAAW,EACViB,EAAM+E,aAAajE,EAAI,IAC9Bd,EAAM+E,aAAajE,EAAI,GAE3B,IAAMK,EAAKC,aAAaC,QAAQ,iCAC5BC,GAAe,EAKnB,OAJIH,GAAMI,OAAOJ,GAAMnB,EAAMnB,QAAOyC,GAAe,GAC/CA,GACAF,aAAaI,QAAQ,gCAAiCC,KAAKC,UAAU1B,EAAMnB,QAExEmB,0CAKX7E,KAAKwL,iBACLxL,KAAK6E,MAAMkG,YAAa,mCAGnB,IAAAlE,EAAA7G,KAAA8L,EACgB,CAAC9L,KAAK6E,MAAMkG,WAAY/K,KAAK6E,MAAMmG,YAAjDe,EADFD,EAAA,GACQE,EADRF,EAAA,GAAAG,EAE4C,EAAC,GAAO,GAAxDjM,KAAK6E,MAAMkG,WAFPkB,EAAA,GAEmBjM,KAAK6E,MAAMmG,WAF9BiB,EAAA,GAGL,IAAM7I,EAAQb,OAAOC,WACfa,EAASd,OAAOG,YAChBwJ,EAAQlM,KAAK6E,MAAM8F,cAAclJ,IAAI,SAAA8J,GAAI,OAC3C3I,EAAAC,EAAAC,cAACqJ,EAAD,CAAMvG,EAAG2F,EAAK3F,EAAGD,EAAG4F,EAAK5F,EAAGgE,MAAO4B,EAAK5B,MACpCC,aAAc/C,EAAKhC,MAAM+E,aAAcE,SAAU,kBAAMjD,EAAKmD,mBAE9DoC,EAAcpM,KAAK6E,MAAMlB,QAAU3D,KAAK6E,MAAMjB,UAAY5D,KAAK6E,MAAMgG,UACvEjI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUhD,KAAK6E,MAAMjB,SAAW,YAAc,UAAkB,GAC7EyI,EAASxM,EAAQ2B,MAAM,GAAGC,IAAI,SAACC,EAAGqE,GAAJ,OAChCnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASqH,IAAKiC,IACzBpJ,MAAO,CAAC2E,IAAG,GAAA5E,OAAII,EAAS,GAAb,MAAqByE,KAAI,GAAA7E,OAAI4D,EAAKhC,MAAMoG,QAAWlF,EAAI3C,EAAQ,KAAtC,MAAkDC,OAAO,OAC7FxB,MAAM,QAAS0K,UAAU,OAAQC,SAAS,YAE5CC,EAAa5M,EAAQ2B,MAAM,GAAGC,IAAI,SAACC,EAAGqE,GAAJ,OACpCnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaqH,IAAKqC,IAAYxJ,MAAO,CAAC4E,KAAI,GAAA7E,OAAK,GAAK4D,EAAKhC,MAAMqG,KAAQnF,EAAI3C,EAAQ,GAAzC,WAEvDuJ,EAAa/J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,yBACoBhD,KAAK6E,MAAMnB,MAC1Cd,EAAAC,EAAAC,cAAA,WAFW,8BAGyB9C,KAAK6E,MAAMhB,UAC/CjB,EAAAC,EAAAC,cAAA,WAJW,yDAOnB,OACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACVyJ,EACD7J,EAAAC,EAAAC,cAAC8J,EAAD,CAAOxE,IAtTJ,gEAsTqBF,KAAM6D,IAC9BnJ,EAAAC,EAAAC,cAAC8J,EAAD,CAAOxE,IAtTJ,gEAsTqBF,KAAM8D,IAC9BpJ,EAAAC,EAAAC,cAAC+J,EAAD,CAAMjH,EAAG5F,KAAK6E,MAAM+E,aAAahE,EAAGD,EAAG3F,KAAK6E,MAAM+E,aAAajE,IAC9DuG,EACAE,EACAC,EACAM,UA5J4BrJ,IAAMC,WCrK/BuJ,QACW,cAA7BvK,OAAOwK,SAASC,UAEe,UAA7BzK,OAAOwK,SAASC,UAEhBzK,OAAOwK,SAASC,SAASC,MACvB,2DCVN,IAEMC,mLAEE,OACItK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAuB,iBAC3BxK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAalJ,IACnC1B,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAalJ,IACxC1B,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAahG,IAC9C5E,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAarC,YAP5C7H,IAAMC,WAaxBkK,IAASC,OAAO9K,EAAAC,EAAAC,cAAC6K,EAAD,MAAQnH,SAASoH,eAAe,SDkH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fef1f102.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pipe.85a093a0.png\";","module.exports = __webpack_public_path__ + \"static/media/sky58.c122d050.png\";","module.exports = __webpack_public_path__ + \"static/media/bird.2288acff.png\";","module.exports = __webpack_public_path__ + \"static/media/ground.d63f9713.png\";","\r\nexport class Utility {\r\n    static array(length: number, item?: any): any[] {\r\n        return Array(length).fill(item ? item : null);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './Snake.css';\r\nimport { Utility } from './Utility';\r\n\r\nconst boardWidth = 30;\r\nconst boardHeight = 20;\r\nlet squareSize = 0;\r\nconst randomPosition = () => [Math.floor(Math.random() * boardHeight), Math.floor(Math.random() * boardWidth)];\r\nconst arePositionsEqual = (p1: number[], p2: number[]) => p1[0] === p2[0] && p1[1] === p2[1];\r\n\r\nclass BoardProps {\r\n    snakeBody: number[][] = [];\r\n    snakeHead: number[] = [];\r\n    food: number[] = [];\r\n    onEat: any;\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    snakeHeadColor = 'blue';\r\n    snakeBodyColor = 'green';\r\n    foodColor = 'red';\r\n    boardColor = 'black';\r\n    props: BoardProps;\r\n\r\n    constructor(props: BoardProps) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        // building array to figure out the color for each square\r\n        const squareColors: string[][] = Utility.array(boardHeight).map((v, rowindex) =>\r\n            Utility.array(boardWidth).map((v, columnindex) => {\r\n                let color;\r\n                this.props.snakeBody.forEach(bodyPart => {\r\n                    if (arePositionsEqual(bodyPart, [rowindex, columnindex]))\r\n                        color = this.snakeBodyColor;\r\n                });\r\n                if (arePositionsEqual(this.props.food, [rowindex, columnindex]))\r\n                    color = this.foodColor;\r\n                else if (arePositionsEqual(this.props.snakeHead, [rowindex, columnindex]))\r\n                    color = this.snakeHeadColor;\r\n                else if (!color)\r\n                    color = this.boardColor;\r\n                return color;\r\n            })\r\n        );\r\n        // trigger onEat event if the head is on top of food\r\n        if (arePositionsEqual(this.props.snakeHead, this.props.food)) this.props.onEat();\r\n        // calculating square size\r\n        const maxWidth = Math.floor((window.innerWidth - 100) / boardWidth);\r\n        const maxHeight = Math.floor((window.innerHeight - 100) / boardHeight);\r\n        squareSize = Math.min(maxWidth, maxHeight);\r\n        // return rendered board\r\n        return (\r\n            <div>\r\n                {\r\n                    Utility.array(boardHeight).map((row, rowindex) =>\r\n                        <div className=\"board-row\" key={`row-${rowindex}`}>\r\n                            {\r\n                                Utility.array(boardWidth).map((row, columnindex) =>\r\n                                    <div className=\"square\" key={`square-${rowindex}-${columnindex}`}\r\n                                        style={\r\n                                            {backgroundColor: squareColors[rowindex][columnindex],\r\n                                            width: `${squareSize}px`, height: `${squareSize}px`}\r\n                                        }>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ScoreBoardProps {\r\n    score: number = 0;\r\n    highscore: number = 0;\r\n    paused: boolean = false;\r\n    gameover: boolean = false;\r\n}\r\n\r\nclass ScoreBoard extends React.Component {\r\n\r\n    props: ScoreBoardProps;\r\n\r\n    constructor(props: ScoreBoardProps) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"square\" style={{width: `${squareSize * (boardWidth / 2)}px`}}>\r\n                        Score: {this.props.score}\r\n                    </div>\r\n                    <div className=\"square\" style={{width: `${squareSize * (boardWidth / 2)}px`}}>\r\n                        {\r\n                            this.props.paused ?\r\n                            <div style={{color:'green'}}><b>Paused</b></div>\r\n                            : this.props.gameover ?\r\n                            <div style={{color:'red'}}><b>Game Over</b></div>\r\n                            : `High Score: ${this.props.highscore}`\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <div className=\"square\" style={{width: `${boardWidth * (squareSize)}px`}}>\r\n                        (r) Reset | (WASD, Arrow Keys) move snake | (esc) Escape\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass GameState {\r\n    paused: boolean = false;\r\n    gameover: boolean = false;\r\n    score: number = 0;\r\n    snakeDirection: string = '>';\r\n    snakeHeadPosition: number[] = [boardHeight / 2, 3];\r\n    snakeBody: number[][] = [];\r\n    foodPosition: number[] = [boardHeight / 2, boardWidth / 2];\r\n    snakeLength: number = 1;\r\n    gameTickInterval: number = 110;\r\n}\r\n\r\nexport default class SnakeGame extends React.Component {\r\n\r\n    gameTickDelta: number = 0;\r\n    snakeLengthDelta: number = 3;\r\n    scoreDelta: number = 5;\r\n    currentDirection: string;\r\n    interval: any;\r\n    state: GameState;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const tempState = new GameState();\r\n        this.state = tempState;\r\n        this.currentDirection = this.state.snakeDirection;\r\n        this.setState(tempState);\r\n        this.interval = setInterval(() => this.gameTick(), this.state.gameTickInterval);\r\n    }\r\n\r\n    gameTick() {\r\n        this.setState((state: GameState) => {\r\n            if (!state.paused && !state.gameover) {\r\n                // move snake in direction set by keyDown method\r\n                const dir = state.snakeDirection;\r\n                this.currentDirection = dir;\r\n                let [y, x] = state.snakeHeadPosition;\r\n                state.snakeBody.push([y, x]);\r\n                x = dir === '<' ? x - 1 : dir === '>' ? x + 1 : x;\r\n                y = dir === '^' ? y - 1 : dir === 'v' ? y + 1 : y;\r\n                // check for collisions and set new positions\r\n                if (y < 0 || y > boardHeight - 1 || x < 0 || x > boardWidth - 1) {\r\n                    state.gameover = true;\r\n                } else {\r\n                    state.snakeHeadPosition = [y, x];\r\n                    state.snakeBody = Utility.array(state.snakeBody.length, [-1, -1]).concat(state.snakeBody);\r\n                    state.snakeBody = state.snakeBody.slice(state.snakeBody.length - state.snakeLength);\r\n                    state.snakeBody.forEach((bodyPart, i) => {\r\n                        if (arePositionsEqual(bodyPart, state.snakeHeadPosition)) state.gameover = true;\r\n                    });\r\n                }\r\n                if (state.gameover) {\r\n                    const hs = localStorage.getItem('nate314.snake.highScore');\r\n                    let newHighScore = true;\r\n                    if (hs && Number(hs) > state.score) newHighScore = false;\r\n                    if (newHighScore) {\r\n                        localStorage.setItem('nate314.snake.highScore', JSON.stringify(state.score));\r\n                    }\r\n                }\r\n            }\r\n            return state;\r\n        });\r\n    }\r\n\r\n    keyDown = (e: any) => {\r\n        this.setState((state: GameState) => {\r\n            const k = e.key;\r\n            // set the direction based on the key pressed\r\n            state.snakeDirection =\r\n                !['^', 'v'].includes(this.currentDirection) ?\r\n                    ((k === 'ArrowUp' || k === 'W' || k === 'w') ? '^' :\r\n                    (k === 'ArrowDown' || k === 'S' || k === 's') ? 'v' : this.currentDirection) :\r\n                !['<', '>'].includes(this.currentDirection) ?\r\n                    ((k === 'ArrowLeft' || k === 'A' || k === 'a') ? '<' :\r\n                    (k === 'ArrowRight' || k === 'D' || k === 'd') ? '>' : this.currentDirection)\r\n                : this.currentDirection;\r\n            if (k === 'Escape') state.paused = !state.paused;\r\n            if (['r', 'R'].includes(k)) {\r\n                clearInterval(this.interval);\r\n                state = new GameState();\r\n                this.interval = setInterval(() => this.gameTick(), state.gameTickInterval);\r\n            }\r\n            return state;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.keyDown);\r\n    }\r\n\r\n    eatFood() {\r\n        this.setState((state: GameState) => {\r\n            // move food and increment the snake's length\r\n            while (true) {\r\n                state.foodPosition = randomPosition();\r\n                let isFoodInBody = false;\r\n                state.snakeBody.forEach(bodyPart => {\r\n                    if (arePositionsEqual(state.foodPosition, bodyPart)) isFoodInBody = true;\r\n                });\r\n                if (!isFoodInBody) break;\r\n            }\r\n            state.snakeLength += this.snakeLengthDelta;\r\n            state.score += this.scoreDelta;\r\n            state.gameTickInterval -= this.gameTickDelta;\r\n            clearInterval(this.interval);\r\n            this.interval = setInterval(() => this.gameTick(), state.gameTickInterval);\r\n            return state;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let highscore = Number(localStorage.getItem('nate314.snake.highScore'));\r\n        highscore = isNaN(highscore) ? 0 : highscore;\r\n        // show board and scoreboard on the screen\r\n        return (\r\n            <div>\r\n                <Board\r\n                    snakeBody={this.state.snakeBody}\r\n                    snakeHead={this.state.snakeHeadPosition}\r\n                    food={this.state.foodPosition}\r\n                    onEat={() => this.eatFood()}\r\n                />\r\n                <ScoreBoard\r\n                    score={this.state.score}\r\n                    highscore={highscore}\r\n                    paused={this.state.paused}\r\n                    gameover={this.state.gameover}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './FloatyStars.css';\r\nimport { Utility } from './Utility';\r\n\r\nconst numberOfStars = 100;\r\nconst starSize = 10;\r\nconst maxSpeed = 1;\r\nconst frameInterval = 10;\r\n\r\nclass FloatyStarsState {\r\n    starLocations: number[][] = [];\r\n    starVelocities: number[][] = [];\r\n}\r\n\r\nexport default class FloatyStars extends React.Component {\r\n\r\n    state: FloatyStarsState;\r\n    props: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = new FloatyStarsState();\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        Utility.array(numberOfStars).forEach(() => {\r\n            this.state.starLocations.push([Math.random() * width, Math.random() * height]);\r\n            this.state.starVelocities.push([Math.random() * maxSpeed, Math.random() * maxSpeed]);\r\n        });\r\n        this.setState(this.state);\r\n        setInterval(() => {\r\n            this.animate();\r\n        }, frameInterval);\r\n    }\r\n\r\n    animate() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        this.setState((state: FloatyStarsState) => {\r\n            let i = 0;\r\n            state.starLocations.forEach(starLocation => {\r\n                starLocation[0] -= state.starVelocities[i][0];\r\n                starLocation[1] += state.starVelocities[i][1];\r\n                if (!((starLocation[0] < width + starSize && starLocation[0] > -2 * starSize))) {\r\n                    starLocation[0] = width + starSize;\r\n                }\r\n                if (!((starLocation[1] < height + starSize && starLocation[1] > -2 * starSize))) {\r\n                    starLocation[1] = -starSize;\r\n                }\r\n                i++;\r\n            });\r\n            return state;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        return (\r\n            <div className=\"sky\">\r\n                {\r\n                    this.state.starLocations\r\n                    .filter(star => (star[0] < width && star[0] > 0) && (star[1] < height && star[1] > 0))\r\n                    .map(starLocation =>\r\n                            <div className=\"snow\"\r\n                                style={{\r\n                                    top: `${starLocation[1]}px`, left: `${starLocation[0]}px`,\r\n                                    width: `${starSize}px`, height: `${starSize}px`\r\n                                }}>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nclass MusicProps {\r\n    url: string = '';\r\n    play: boolean = false;\r\n}\r\n\r\nclass MusicState {\r\n    audio: HTMLAudioElement = new Audio('');\r\n    play: boolean = false;\r\n}\r\n\r\nclass Music extends React.Component {\r\n    state: MusicState;\r\n    props: MusicProps;\r\n\r\n    constructor(props: MusicProps) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = new MusicState();\r\n        this.state.audio = new Audio(this.props.url);\r\n        this.setState(this.state);\r\n    }\r\n  \r\n    // togglePlay = () => {\r\n            // this.setState({ play: !this.state.play }, () => {\r\n            //     this.state.play ? this.state.audio.play() : this.state.audio.pause();\r\n            //   });\r\n    // }\r\n  \r\n    render() {\r\n        if (this.props.play) {\r\n            this.state.audio.play()\r\n        }\r\n        return (\r\n            <div>\r\n            {/* <button onClick={() => console.log}>{this.state.play ? 'Pause' : 'Play'}</button> */}\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Music;\r\n","import React from 'react';\r\nimport './FlappyFinch.css';\r\nimport Music from './Music';\r\nimport { Utility } from './Utility';\r\nimport sky58Image from './assets/sky58.png';\r\nimport birdImage from './assets/bird.png';\r\nimport groundImage from './assets/ground.png';\r\nimport pipeImage from './assets/pipe.png';\r\n\r\nconst frameInterval = 10;\r\nconst pipeXGap = 300;\r\nconst pipeYGap = 250;  \r\nconst pipeWidth = 100;\r\nconst gravityConstant = 0.15;\r\nconst flapVelocity = -6.25;\r\nconst birdSize = 40;\r\nconst nomNomSize = 10;\r\nconst mp3DingUrl = 'https://freesound.org/data/previews/341/341695_5858296-lq.mp3';\r\nconst mp3FlapUrl = 'https://freesound.org/data/previews/244/244980_3008343-lq.mp3';\r\n\r\nconst colliding = (object: {x: number, y: number, width: number, height: number, isPipe: boolean}, bird: BirdProps) => {\r\n    // calculate horizontal collision\r\n    let horizontalCollision = false;\r\n    const leftObject = object.x;\r\n    const rightObject = object.x + pipeWidth;\r\n    const leftBird = bird.x;\r\n    const rightBird = bird.x + birdSize;\r\n    if (rightBird > leftObject && leftBird < rightObject) horizontalCollision = true;\r\n    // calculate vertical collision\r\n    let verticalCollision = false;\r\n    if (object.isPipe) {\r\n        const halfGap = pipeYGap / 2;\r\n        const topPipeBottom = object.y - halfGap;\r\n        const bottomPipeTop = object.y + halfGap;\r\n        const topBird = bird.y;\r\n        const bottomBird = bird.y + birdSize;\r\n        if (topBird < topPipeBottom || bottomBird > bottomPipeTop) verticalCollision = true;\r\n    } else {\r\n        const topObject = object.y;\r\n        const bottomObject = object.y + object.height;\r\n        const topBird = bird.y;\r\n        const bottomBird = bird.y + birdSize;\r\n        if (bottomBird > topObject && topBird < bottomObject) verticalCollision = true;\r\n    }\r\n    // bird and pipe are colliding if both horizontal and vertical collision occur\r\n    return horizontalCollision && verticalCollision;\r\n};\r\n\r\nclass NomNomProps {\r\n    x: number = 0;\r\n    y: number = 0;\r\n}\r\n\r\nclass NomNom extends React.Component {\r\n\r\n    props: NomNomProps;\r\n\r\n    constructor(props: NomNomProps) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        const halfNomNomSize = nomNomSize / 2;\r\n        return (\r\n            <div>\r\n                <div className=\"nomnom\" style={{position:'absolute',\r\n                    width:`${nomNomSize}px`, height:`${nomNomSize}px`,\r\n                    top:`${this.props.y - halfNomNomSize}px`,\r\n                    left:`${this.props.x}px`}}>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass PipeProps {\r\n    x: number = 0;\r\n    y: number = 0;\r\n    index: number = 0;\r\n    birdPosition: BirdProps = new BirdProps(0, 0);\r\n    onNomNom: any;\r\n    constructor(x: number, y: number, index: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\nclass Pipe extends React.Component {\r\n\r\n    nomNomEaten: boolean = false;\r\n    nomNomProps: NomNomProps;\r\n    props: PipeProps;\r\n\r\n    constructor(props: PipeProps) {\r\n        super(props);\r\n        this.props = props;\r\n        this.nomNomProps = new NomNomProps();\r\n    }\r\n\r\n    render() {\r\n        const height = window.innerHeight;\r\n        const halfGap = pipeYGap / 2;\r\n        const topPipeTop = (this.props.y - height) - halfGap;\r\n        const bottomPipeTop = this.props.y + halfGap;\r\n        this.nomNomProps.x = this.props.x + (pipeWidth / 2);\r\n        if (this.nomNomProps.y == 0) {\r\n            const topPipeBottom = topPipeTop + height;\r\n            this.nomNomProps.y = topPipeBottom + (Math.random() * (bottomPipeTop - topPipeBottom));\r\n        }\r\n        const object = {\r\n            x: this.nomNomProps.x,\r\n            y: this.nomNomProps.y,\r\n            width: nomNomSize,\r\n            height: nomNomSize,\r\n            isPipe: false\r\n        };\r\n        if (!this.nomNomEaten && colliding(object, this.props.birdPosition)) {\r\n            this.props.onNomNom();\r\n            this.nomNomEaten = true;\r\n        }\r\n        return (\r\n            <div>\r\n                {this.nomNomEaten ? '' : <NomNom x={this.nomNomProps.x} y={this.nomNomProps.y}/>}\r\n                <img className=\"pipe\" src={pipeImage} style={{ transform:'scale(-1, -1)',\r\n                    top:`${topPipeTop}px`, left:`${this.props.x}px`, width:`${pipeWidth}px`}}></img>\r\n                <img className=\"pipe\" src={pipeImage} style={{ transform:'scale(-1, 1)',\r\n                    top:`${bottomPipeTop}px`, left:`${this.props.x}px`, width:`${pipeWidth}px`}}></img>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass BirdProps {\r\n    x: number = 0;\r\n    y: number = 0;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Bird extends React.Component {\r\n\r\n    props: BirdProps;\r\n\r\n    constructor(props: BirdProps) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <img className=\"bird\" src={birdImage}\r\n                style={{left:`${this.props.x}px`, top:`${this.props.y}px`,\r\n                        width:`${birdSize}px`, height:`${birdSize}px`}}></img>\r\n        )\r\n    };\r\n}\r\n\r\nclass FlappyFinchGameState {\r\n    pipePositions: PipeProps[] = [];\r\n    birdPosition: BirdProps = new BirdProps(120, 0);\r\n    birdVelocity: number = 0;\r\n    paused: boolean = false;\r\n    gameover: boolean = false;\r\n    collision: boolean = false;\r\n    currentPipeToCheck: number = 1;\r\n    score: number = 0;\r\n    highscore: number = 0;\r\n    shouldDing: boolean = false;\r\n    shouldFlap: boolean = false;\r\n    groundX: number = 0;\r\n    skyX: number = 0;\r\n}\r\n\r\nexport default class FlappyFinchGame extends React.Component {\r\n    randomPipePosition = () => (window.innerHeight / 2) + ((Math.random() - 0.5) * (window.innerHeight / 2));\r\n\r\n    state: FlappyFinchGameState;\r\n    props: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = new FlappyFinchGameState();\r\n        this.restart();\r\n        setInterval(() => {\r\n            if (!this.state.paused && !this.state.gameover) {\r\n                this.animate();\r\n            }\r\n        }, frameInterval);\r\n    }\r\n\r\n    restart() {\r\n        this.state = new FlappyFinchGameState();\r\n        const lshs = localStorage.getItem('nate314.flappyfinch.highScore');\r\n        if (!lshs) {\r\n            localStorage.setItem('nate314.flappyfinch.highScore', JSON.stringify(0));\r\n        }\r\n        this.state.highscore = lshs ? Number(lshs) : 0;\r\n        let x = 3 * pipeXGap;\r\n        let index = 1;\r\n        Utility.array(10).forEach(() => {\r\n            this.state.pipePositions.push(new PipeProps(x, this.randomPipePosition(), index));\r\n            x += pipeXGap;\r\n            index++;\r\n        });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    keyDown = (e: any) => {\r\n        this.setState((state: FlappyFinchGameState) => {\r\n            const k = e.key;\r\n            switch (k) {\r\n                case ' ':\r\n                    state.birdVelocity = flapVelocity;\r\n                    state.shouldFlap = true;\r\n                    break;\r\n                case 'Escape':\r\n                    state.paused = !state.paused;\r\n                    break;\r\n                case 'r':\r\n                case 'R':\r\n                    this.restart();\r\n                    break;\r\n            }\r\n            return state;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.keyDown);\r\n    }\r\n\r\n    incrementScore() {\r\n        this.state.score++;\r\n        const lshs = localStorage.getItem('nate314.flappyfinch.highScore');\r\n        if (Number(lshs) < this.state.score) {\r\n            this.state.highscore = this.state.score;\r\n            localStorage.setItem('nate314.flappyfinch.highScore', JSON.stringify(this.state.highscore));\r\n        }\r\n    }\r\n\r\n    animate() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        this.setState((state: FlappyFinchGameState) => {\r\n            state.birdPosition.y += state.birdVelocity;\r\n            state.birdVelocity += gravityConstant;\r\n            state.pipePositions.forEach(pipe => {\r\n                if (state.currentPipeToCheck === pipe.index) {\r\n                    if (pipe.x + pipeWidth < this.state.birdPosition.x) {\r\n                        state.currentPipeToCheck++;\r\n                        this.incrementScore();\r\n                    }\r\n                    const object = {\r\n                        x: pipe.x, y: pipe.y,\r\n                        width: pipeWidth, height: height,\r\n                        isPipe: true\r\n                    };\r\n                    state.gameover = colliding(object, this.state.birdPosition);\r\n                }\r\n                if (pipe.index < state.currentPipeToCheck - 1) {\r\n                    pipe.index = Math.max(...state.pipePositions.map(pos => pos.index)) + 1;\r\n                    pipe.x = Math.max(...state.pipePositions.map(pos => pos.x)) + pipeXGap;\r\n                    pipe.y = this.randomPipePosition();\r\n                }\r\n                pipe.x -= 1;\r\n            });\r\n            [state.groundX, state.skyX] = [state.groundX -1, state.skyX - 0.5];\r\n            if (state.groundX < -width * 0.625) {\r\n                state.groundX = 0;\r\n            }\r\n            if (state.skyX < -width * 0.5) {\r\n                state.skyX = 0;\r\n            }\r\n            if (state.birdPosition.y > height - (birdSize + 50)) {\r\n                state.gameover = true;\r\n            } else if (state.birdPosition.y < 0) {\r\n                state.birdPosition.y = 0;\r\n            }\r\n            const hs = localStorage.getItem('nate314.flappyfinch.highScore');\r\n            let newHighScore = true;\r\n            if (hs && Number(hs) > state.score) newHighScore = false;\r\n            if (newHighScore) {\r\n                localStorage.setItem('nate314.flappyfinch.highScore', JSON.stringify(state.score));\r\n            }\r\n            return state;\r\n        });\r\n    }\r\n\r\n    nomNomEaten(): void {\r\n        this.incrementScore();\r\n        this.state.shouldDing = true;\r\n    }\r\n \r\n    render() {\r\n        const [ding, flap] = [this.state.shouldDing, this.state.shouldFlap];\r\n        [this.state.shouldDing, this.state.shouldFlap] = [false, false];\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const pipes = this.state.pipePositions.map(pipe => \r\n            <Pipe x={pipe.x} y={pipe.y} index={pipe.index}\r\n                birdPosition={this.state.birdPosition} onNomNom={() => this.nomNomEaten()}/>\r\n        );\r\n        const gamestatus = (this.state.paused || this.state.gameover || this.state.collision) ?\r\n            <div className=\"paused\">{this.state.gameover ? 'GAME OVER' : 'PAUSED'}</div> : '';\r\n        const ground = Utility.array(5).map((v, i) =>\r\n            <img className=\"ground\" src={groundImage}\r\n                style={{top:`${height - 50}px`, left:`${this.state.groundX + (i * width * 0.625)}px`, height:'50px',\r\n                color:'white', textAlign:'left', fontSize:'20px'}}></img>\r\n        );\r\n        const background = Utility.array(5).map((v, i) =>\r\n            <img className=\"background\" src={sky58Image} style={{left: `${10 + this.state.skyX + (i * width * 0.5)}px`}}></img>\r\n        );\r\n        const scoreboard = <div className=\"scoreboard\">\r\n                &nbsp;&nbsp;&nbsp;Score:&nbsp;{this.state.score}\r\n                <br />\r\n                &nbsp;&nbsp;&nbsp;High Score:&nbsp;{this.state.highscore}\r\n                <br />\r\n                &nbsp;&nbsp;&nbsp;(r) Reset | (Escape) Pause | (Space) Flap\r\n            </div>;\r\n        return (\r\n            <div className=\"game\">\r\n                {background}\r\n                <Music url={mp3DingUrl} play={ding}/>\r\n                <Music url={mp3FlapUrl} play={flap}/>\r\n                <Bird x={this.state.birdPosition.x} y={this.state.birdPosition.y}/>\r\n                {pipes}\r\n                {gamestatus}\r\n                {ground}\r\n                {scoreboard}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport SnakeGame from './Snake';\r\nimport FloatyStars from './FloatyStars';\r\nimport FlappyFinchGame from './FlappyFinch';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst production = true;\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router basename={production ? '/react-games/' : '/'}>\r\n                <Route path=\"/\" exact component = {SnakeGame} />\r\n                <Route path=\"/snake\" exact component = {SnakeGame} />\r\n                <Route path=\"/floatystars\" exact component = {FloatyStars} />\r\n                <Route path=\"/flappyfinch\" exact component = {FlappyFinchGame} />\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}